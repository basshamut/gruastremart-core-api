name: Deploy to Docker on VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: docker build -t gruastremart-core-api:latest .

      - name: Save Docker image as tarball
        run: docker save gruastremart-core-api:latest > gruastremart-core-api.tar

      # üîê Descifrar clave privada SSH
      - name: Decrypt SSH private key
        run: |
          gpg --batch --yes --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
            -o ./private_key -d .github/secrets/id_rsa_hostinger_vps_root.gpg
          chmod 600 ./private_key

      # ‚úÖ Validar que los secretos cr√≠ticos existan
      - name: Validar existencia de secretos requeridos
        run: |
          if [ -z "${{ secrets.VPS_SSH_USERNAME }}" ] || [ -z "${{ secrets.VPS_SSH_HOST }}" ] || [ -z "${{ secrets.ENV_FILE }}" ]; then
            echo "‚ùå Faltan uno o m√°s secretos obligatorios."
            exit 1
          fi

      # üêõ Debug: Mostrar temporalmente los secretos (‚ö†Ô∏è no dejar en producci√≥n)
      - name: Debug SSH variables (‚ö†Ô∏è no dejar en producci√≥n)
        run: |
          echo "Usuario: ${{ secrets.VPS_SSH_USERNAME }}"
          echo "Host: '${{ secrets.VPS_SSH_HOST }}'"
          echo "ENV_FILE: '${{ secrets.ENV_FILE }}'"

      # üì¶ Copiar imagen manualmente al VPS
      - name: Copy Docker image tarball manually using scp
        run: |
          scp -i ./private_key -o StrictHostKeyChecking=no \
            gruastremart-core-api.tar \
            ${{ secrets.VPS_SSH_USERNAME }}@${{ secrets.VPS_SSH_HOST }}:/home/${{ secrets.VPS_SSH_USERNAME }}/

      # üöÄ Desplegar en el VPS manualmente
      - name: Deploy Docker container manually
        run: |
          ssh -i ./private_key -o StrictHostKeyChecking=no ${{ secrets.VPS_SSH_USERNAME }}@${{ secrets.VPS_SSH_HOST }} << 'EOF'
            docker rm -f gruastremart-core-api || true
            docker rmi -f gruastremart-core-api:latest || true
            echo "${{ secrets.ENV_FILE }}" > /home/${{ secrets.VPS_SSH_USERNAME }}/.env
            docker load -i /home/${{ secrets.VPS_SSH_USERNAME }}/gruastremart-core-api.tar
            docker run -d \
              --name gruastremart-core-api \
              -p 8083:8080 \
              --env-file /home/${{ secrets.VPS_SSH_USERNAME }}/.env \
              gruastremart-core-api:latest
          EOF

      # üóëÔ∏è Limpiar clave privada
      - name: Cleanup private key
        if: always()
        run: rm -f ./private_key
